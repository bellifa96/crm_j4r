{{ form_start(form, {'attr': {'class': 'form'}}
) }}

<style>
	/* Styles for the modal and overlay */
	#myModal {
		display: none;
		position: fixed;
		top: 50%;
		left: 50%;
		width: 70%;
		transform: translate(-50%, -50%);
		padding: 20px;
		background-color: #fff;
		border: 1px solid #ccc;
		max-height: 80%; /* Set a maximum height for the modal */
		overflow-y: auto; /* Enable vertical scrollbar if content overflows */
		box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
		z-index: 1;
	}

	#overlay {
		display: none;
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.5);
		z-index: 0;
	}
	.depot-info {
		background-color: #f0f0f0;
		padding: 10px;
		border: 1px solid #ddd;
		margin: 10px;
		border-radius: 5px;
		color: black;
		text-align: center;
	}
</style>

{{ form_start(form, {'method': 'POST', 'attr': {'class': 'form'}}) }}

<div class="row">
	<div class="container mt-5">


		<div class="col-md-11 m-auto page-block mt-4">
			<div class="societe">
				<div class="row">
					<div class="col-md-6">
					
						
						
						
					
						
						
						<div class="col-md-12 row mt-3">
							<div class="col-md-3 text-end label">
								Consignes 1
							</div>
							<div class="col-md-9">
								{{ form_widget(form.Commentaires1,{'attr':{"class":"form-control form-control-sm-2 societe-input required"}}) }}
							</div>
						</div>
						<div class="col-md-12 row mt-3">
							<div class="col-md-3 text-end label">
								Consignes 2
							</div>
							<div class="col-md-9">
								{{ form_widget(form.Commentaires2,{'attr':{"class":"form-control form-control-sm-2 societe-input required"}}) }}
							</div>
						</div>
					</div>
					<div class="col-md-6">
						
						
						
						<div class="col-md-12 row mt-3">
							<div class="col-md-3 text-end label">
								Date Commande
							</div>
							<div class="col-md-9">
								{{ form_widget(form.DateCde,{'attr':{"class":"form-control form-control-sm-2 societe-input required"}}) }}
							</div>
						</div>
						<div class="col-md-12 row mt-3">
							<div class="col-md-3 text-end label">
								Date Enlevement
							</div>
							<div class="col-md-4">
								{{ form_widget(form.DateEnlevDem,{'attr':{"class":"form-control form-control-sm-2 societe-input required"}}) }}
							</div>
							<div class="col-md-4">
								{{ form_widget(form.HeureEnlevDem,{'attr':{"class":"form-control form-control-sm-2 societe-input required"}}) }}
							</div>
						</div>
						<div class="col-md-12 row mt-3">
							<div class="col-md-3 text-end label">
								Poids Totale
							</div>
							<div class="col-md-9">
								{{ form_widget(form.PoidsTotMat,{'attr':{"class":"form-control form-control-sm-2 societe-input required"}}) }}
							</div>
						</div>
						<div class="col-md-12 row mt-3">
							<div class="col-md-3 text-end label">
								Num Erp Vente
							</div>
							<div class="col-md-9">
								{{ form_widget(form.NumErpVente,{'attr':{"class":"form-control form-control-sm-2 societe-input required"}}) }}
							</div>
						</div>
						<div class="col-md-12 row mt-3">
							<div class="col-md-3 text-end label">
								Num Erp Location
							</div>
							<div class="col-md-9">
								{{ form_widget(form.NumErpLocation,{'attr':{"class":"form-control form-control-sm-2 societe-input required"}}) }}
							</div>
						</div>
					</div>


				</div>
			</div>
		</div>
	</div>
	<div
		class="container mt-4">
		<!-- Buttons in separate columns -->
		<div
			class="row">
			<!-- Cancel Button Column -->

			<div class="col-md-6">
				<button type="button" id="ajouter" onclick="openModal()" class="btn btn-light btn-block">
					<span class="mr-2">Article</span>
					<i class="fas fa-plus"></i>
					<!-- Change the icon here -->
				</button>

			</div>


			<!-- Validate Button Column -->
			<div class="col-md-6">
				<button type="submit" class="btn btn-success btn-block">
					<span class="mr-2">Valider</span>
					<i class="fas fa-check"></i>
				</button>
			</div>

		</div>
	</div>

	{{ form_end(form, {'attr': {'class': 'form'}}
	) }}
	<br>
	<div class="depot-info">
		<strong>Depot:</strong>
		{{ depots.nomdepot }}
	</div>

	<br>
	<input type="hidden" value="{{depots.codedepot}}" id="codedepot"/>
	<div class="flex-container">
		<div class="flex-item" id="poidsqte">0</div>
		<div class="flex-item" id="poidsqteSortie">0</div>
		<div class="flex-item" id="poidsqtePreparer">0</div>
	</div>
	<table class="table text-center datatable" id="commandeTable" style="color: #0E4377;">
		<thead>
			<tr class="tr-head">
				<th>Article</th>
				<th>Designation</th>
				<th>Qte Commandées</th>
				<th>Qte Sorties</th>
				<th>Qte a Préparer</th>
				<th>Poids</th>
				<th>Reste a Sortir</th>
				<th>Type</th>
			</tr>
		</thead>
		<tbody></tbody>
	</tbody>
</table>

<div id="myModal">
	<span onclick="closeModal()" style="cursor: pointer; float: right;">&times;</span>
	<div class="container mt-2">
		<label for="selectOption">Select:</label>
		<select class="form-control" id="selectOption">
			<option value="L" selected>Location</option>
			<option value="V">Vente</option>
		</select>
	</div>
	<table class="table text-center datatable" id="commandeAjouter" style="color: #0E4377;">
		<thead>
			<tr class="tr-head">
				<th>Article</th>
				<th>Designation</th>
				<th>Poids</th>
				<th>id</th>

			</tr>
		</thead>
		<tbody>
			{% for article in articlesbyDepot %}
				<tr ondblclick="test('{{article.designation}}','{{article.article}}','{{article.poids}}')">
					<td>{{ article.article }}</td>
					<td>{{ article.designation }}</td>
					<td>{{ article.poids }}</td>
					<td>{{ article.idarticles }}</td>

				</tr>
			{% endfor %}

		</tbody>
	</tbody>
</table></div><!-- The Overlay --><div id="overlay"></div><script>
let articleQte = [];

function openModal() {
document.getElementById("myModal").style.display = "block";
document.getElementById("overlay").style.display = "block";
}

function closeModal() {
document.getElementById("myModal").style.display = "none";
document.getElementById("overlay").style.display = "none";
}
function test(designation, article, poids) {
var articleToAdd = {
Article: article,
Designation: designation,
Qte: 0,
QteSortie: 0,
QtePreparer: 0,
QteARester: 0,
poids: poids,
TypeMat: $('#selectOption').val()
};

// Check if the article already exists in the "commandeTable"
var myDataTable = $('#commandeTable').DataTable();
var articleExists = false;

myDataTable.rows().every(function () {
var existingArticle = this.data()[0];
// Assuming the "Article" is in the first column

// Compare the existing article with the one to be added
if (existingArticle === articleToAdd.Article) {
articleExists = true;
return false;
}
return true;
});


if (! articleExists) { // If the article does not exist, add the new row
var newRow = $('<tr>' + '<td>' + articleToAdd.Article + '</td>' + '<td>' + articleToAdd.Designation + '</td>' + '<input class="article" type="hidden" value="' + articleToAdd.Article + '" /><input class="iddepot" type="hidden" value="0"> <td><input type="number" value="' + articleToAdd.Qte + '" class="inputNumber form-control qte" disabled/></td>' + '<td><input type="number" value="' + articleToAdd.QteSortie + '" class="inputNumber form-control qteSortie" disabled/></td>' + '<td><input type="number" value="' + articleToAdd.QtePreparer + '" class="inputNumber form-control qtePreparer" onchange="calculer_poids()" zero="1" article=""/></td> <td><input class="form-control  poids" type="text" value="' + articleToAdd.poids + '"  disabled /> </td>' + '<td><input type="number" value="' + articleToAdd.QteARester + '" class="inputNumber form-control qtearester" disabled/></td>' + '<td><input class="mat form-control " disabled value="' + articleToAdd.TypeMat + '"/></td>' + '</tr>');

myDataTable.row.add(newRow).draw();
calculer_poids();
closeModal();
} else {
alert('Article déja exitant sur la table');
}
}

$(document).ready(function () {
$('.form').submit(function (event) {
event.preventDefault();
articleQte = [];
valider();

let formData = {
articleQte: articleQte,
formData: $(this).serialize(),
depot: document.getElementById("codedepot").value
};

$.ajax({
type: "POST",
url: "/save-cde-ent",
data: JSON.stringify(formData),
success: function (response) { // Handle the success response
window.location.href = "/commande";
},
error: function (error) {
console.log(error);
}
});
});
$(".qtePreparer").on("change", function () { // Your event handling code here
calculer_poids();
});
});


function valider() {
let idDepot = document.getElementById("codedepot").value;

let iddepotElements = document.getElementsByClassName("iddepot");
let qteSortieElements = document.getElementsByClassName("qtePreparer");
let articles = document.getElementsByClassName("article");
let mats = document.getElementsByClassName("mat");


for (let i = 0; i < qteSortieElements.length; i++) {
let iddepotValue = iddepotElements[i].value;
let qteSortieValue = parseFloat(qteSortieElements[i].value) || 0;
let articleValue = articles[i].value;
let matValue = mats[i].value;

let depotObject = {
iddepot: iddepotValue,
qteSortie: qteSortieValue,
article: articleValue,
idDepot: idDepot,
mat: matValue
};
articleQte.push(depotObject);
}
}


$("#selectOption").change(function () {
var selectedValue = $(this).val();
var typeArticle = 1;

console.log("Selected Value: " + selectedValue);

if (selectedValue == "V") {
typeArticle = 2;
} else {
typeArticle = 1;
}


if ($.fn.DataTable.isDataTable('#commandeAjouter')) {
$('#commandeAjouter').DataTable().destroy();
}

commandeAjouter = $('#commandeAjouter').DataTable({paging: true});
console.log(commandeAjouter);
$.ajax({
type: 'GET',
url: '/get-article-type',
data: {
type: typeArticle
},
success: function (data) {
console.log(data);
commandeAjouter.clear().draw();

// Populate the table with the new data
for (var i = 0; i < data.length; i++) {
var article = data[i];
var newRow = [article.article, article.designation, article.poids, article.idarticles];

var $newRow = $('<tr>').on('dblclick', createDblClickHandler(newRow));

// Add td elements to the new row
for (var j = 0; j < newRow.length; j++) {
$newRow.append('<td>' + newRow[j] + '</td>');
}


// Append the new row to the DataTable
commandeAjouter.row.add($newRow);
}
commandeAjouter.draw();
},
error: function (error) {
console.error('Error:', error);
}
});
});


function createDblClickHandler(article) {
return function () {
test(article[1], article[0], article[2]);
};
}
function calculer_poids() {
let poids = document.getElementsByClassName("poids");
let qtePreparer = document.getElementsByClassName("qtePreparer");
let total = 0;

if (poids.length === qtePreparer.length) {
for (let i = 0; i < poids.length; i++) {
let poidsValue = parseFloat(poids[i].value) || 0;
let qtePreparerValue = parseFloat(qtePreparer[i].value) || 0;

// Calculate and add to the total
total += poidsValue * qtePreparerValue;

// Round the number to two decimal places
total = Math.round(total * 100) / 100;
console.log(qtePreparerValue + "-" + poidsValue)
}
console.log("Total: 01 " + total);
document.getElementById("poidsqtePreparer").innerHTML = total;
$(document).ready(function () { // Update the value of the input field with the specified ID
$("#commande_PoidsTotMat").val(total);
});

return total;
} else {
console.error("Arrays 'poids' and 'qtePreparer' must have the same length.");
}
}
$(document).ready(function () {
$(".inputNumber").change(function () {
calculer_poids();
});

// Other actions you want to perform
});</script>
