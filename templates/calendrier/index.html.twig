{% extends 'base.html.twig' %}

{% block title %}
	Commandes
{% endblock %}

{% block body %}
	<!-- Include Bootstrap JS (and jQuery) -->


	<style>
		.container {
			display: flex;
			align-items: center;
			justify-content: space-between;
			width: 100%; /* Set your desired width */
			padding: 10px;
		}

		.left {
			flex: 1; /* Takes up available space on the left */

		}

		.right {
			flex: 2; /* Takes up available space on the right */
			margin-left: 20px; /* Add margin for spacing between left and right */
		}

		select {
			width: 20%;
			padding: 5px;
		}
		.title_article {
			font-family: 'Poppins', sans-serif;
			color: black;
			font-size: 30px;
			margin-left: 10%;
		}
		.basic {
			width: 160px;
			height: 35px;
			background: #f5f5f5;
			font-family: 'Poppins', sans-serif;
			margin-left: 2%;

		}
		.custom-dialog {
			max-width: 400px;
			margin: 50px auto;
			background-color: #fff;
			padding: 20px;
			border-radius: 8px;
			box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		}

		#overlay {
			display: none;
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: rgba(0, 0, 0, 0.5); /* semi-transparent black */
			z-index: 999; /* Ensure it's above the dialog */
		}
		.right {
			flex: 2; /* Takes up available space on the right */
			margin-left: 20px; /* Add margin for spacing between left and right */
			display: flex;
			justify-content: flex-end;

		}
		.btnChargerCommande {}
		.type {
			border: 1px solid black;
			padding: 5px; /* Add some padding for spacing */
			margin: 5px; /* Add margin to separate elements */
			border-radius: 5px; /* Add rounded corners */
			box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1); /* Add a subtle box shadow */
			font-family: 'Arial', sans-serif; /* Specify a font family */
			color: #333; /* Set text color */
			text-align: center; /* Center text within the element */
		}
		.liv {
			background-color: #139E03; /* Add a background color */
			border-color: #139E03;

		}
		.ram {
			background-color: #C4BE04;
			border-color: #C4BE04;
		}
		#myModal {
			display: none;
			position: fixed;
			top: 50%;
			left: 50%;
			width: 70%;
			transform: translate(-50%, -50%);
			padding: 20px;
			background-color: #fff;
			border: 1px solid #ccc;
			max-height: 80%; /* Set a maximum height for the modal */
			overflow-y: auto; /* Enable vertical scrollbar if content overflows */
			box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
			z-index: 1;
		}

		#overlay {
			display: none;
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: rgba(0, 0, 0, 0.5);
			z-index: 0;
		}
	</style>

	<div class="example-wrapper">
		<div class="container">

			<div class="right">
				<div class="col-md-4 ">
					<div class="form-group">
						<label for="DateDu" class="font-weight-bold">DU</label>
						<input type="date" id="DateDu" name="DateDu" class="form-control form-control-sm-2 societe-input required" value="">
					</div>
				</div>
				<div class="col-md-4 ">
					<div class="form-group">
						<label for="DateAu" class="font-weight-bold">Au</label>
						<input type="date" id="DateAu" name="DateAu" class="form-control form-control-sm-2 societe-input required" value="">
					</div>

				</div>
				<div class="">
					<button class="basic" id="creer" onclick="openModal()">
						<span>
							Cr√©er
						</span>
					</button>
				</div>
			</div>
		</div>
	</div>


	<div class="page-block col-lg-12">
		<table class="table text-center datatable" id="eventTable" style="color: #0E4377;">
			<thead>
				<tr class="tr-head">
					<th>Titre</th>
					<th>Start</th>
					<th>End</th>
					<th>Type</th>
				</tr>
			</thead>
			<tbody></tbody>
		</tbody>
	</table>
</div>
<div id="myModal">
	<span onclick="closeModal()" style="cursor: pointer; float: right;">&times;</span>
	<form>
		<div class="form-group">
			<label for="subject">Subject</label>
			<input type="text" class="form-control form-control-sm-2 societe-input" id="subject" value="Meeting with Client">
		</div>


		<div class="form-row">
			<div class="form-group col-md-6">
				<label for="startDateTime">Start Date and Time</label>
				<input type="datetime-local" class="form-control form-control-sm-2 societe-input" id="meeting-time-start" name="meeting-time"  />
			</div>

			<div class="form-group col-md-6">
				<label for="endDateTime">End Date and Time</label>
				<input type="datetime-local" class="form-control form-control-sm-2 societe-input" id="meeting-time-end" name="meeting-time" />
			</div>
		</div>

		<div class="form-group">
			<label for="location">Location</label>
			<input type="text" class="form-control form-control-sm-2 societe-input" id="location" value="Conference Room 123" >
		</div>

		<button type="button" class="btn btn-primary">Enregistre</button>
	</form>
</div><!-- The Overlay --><div id="overlay"></div>

<script>
	function openModal() {

document.getElementById("myModal").style.display = "block";
document.getElementById("overlay").style.display = "block";
}

function closeModal() {


document.getElementById("myModal").style.display = "none";
document.getElementById("overlay").style.display = "none";

}

document.getElementById('DateDu').addEventListener('change', function () {
var minDateDu = this.value;

document.getElementById('DateAu').min = minDateDu;
getEvent();

});
document.getElementById('DateAu').addEventListener('change', function () {
var minDateDu = this.value;
document.getElementById('DateDu').max = minDateDu;
getEvent();
});
function getEvent() {
let DateDu = document.getElementById('DateDu').value;
let DateAu = document.getElementById('DateAu').value;

console.log(DateAu);
console.log(DateDu);

$.ajax({
type: "GET",
url: "/event-date",
data: {
datedu: transormDate(DateDu),
dateau: transormDate(DateAu)
},
success: function (data) {
var eventTable;
if ($.fn.DataTable.isDataTable('#eventTable')) {
$('#eventTable').DataTable().destroy();
}

eventTable = $('#eventTable').DataTable({paging: true});
eventTable.clear().draw();
let dt = data.value;
console.log(dt);
// Populate the table with the new data
for (var i = 0; i < dt.length; i++) {
var event = dt[i];
var newRow = [
event.subject, event.start.dateTime, event.end.dateTime, getTypeEvent(event.subject)
];
eventTable.row.add(newRow);
}

eventTable.draw();
},
error: function (error) {
console.log(error);
}
});


}
function transormDate(dateTransorm) {
let dateObject = new Date(dateTransorm);

// Transform the date to the format YYYY-MM-DD
let transformedDate = `${
dateObject.getFullYear()
}-${
(dateObject.getMonth() + 1).toString().padStart(2, '0')
}-${
dateObject.getDate().toString().padStart(2, '0')
}`;

return transformedDate;
}
function getTypeEvent(event) {
if (event.includes("LIV")) {
return "<div class='type liv'>LIVRAISON</div>"
} else if (event.includes("RAM")) {
return "<div class='type ram'>RAMASSAGE</div>"

} else {
return "<div></div>"

}
}
</script>{% endblock %}
