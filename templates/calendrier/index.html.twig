{% extends 'base.html.twig' %}

{% block title %}
	Commandes
{% endblock %}

{% block body %}
	<!-- Include Bootstrap JS (and jQuery) -->


	<style>
		.container {
			display: flex;
			align-items: center;
			justify-content: space-between;
			width: 100%; /* Set your desired width */
			padding: 10px;
		}

		.left {
			flex: 1; /* Takes up available space on the left */

		}

		.right {
			flex: 2; /* Takes up available space on the right */
			margin-left: 20px; /* Add margin for spacing between left and right */
		}

		select {
			width: 20%;
			padding: 5px;
		}
		.title_article {
			font-family: 'Poppins', sans-serif;
			color: black;
			font-size: 30px;
			margin-left: 10%;
		}
		.basic {
			width: 160px;
			height: 35px;
			background: #f5f5f5;
			font-family: 'Poppins', sans-serif;
			margin-left: 2%;

		}
		.custom-dialog {
			max-width: 400px;
			margin: 50px auto;
			background-color: #fff;
			padding: 20px;
			border-radius: 8px;
			box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		}

		#overlay {
			display: none;
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: rgba(0, 0, 0, 0.5); /* semi-transparent black */
			z-index: 999; /* Ensure it's above the dialog */
		}
		.right {
			flex: 2; /* Takes up available space on the right */
			margin-left: 20px; /* Add margin for spacing between left and right */
			display: flex;
			justify-content: flex-end;

		}
		.btnChargerCommande {}
		.type {
			border: 1px solid black;
			padding: 5px; /* Add some padding for spacing */
			margin: 5px; /* Add margin to separate elements */
			border-radius: 5px; /* Add rounded corners */
			box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1); /* Add a subtle box shadow */
			font-family: 'Arial', sans-serif; /* Specify a font family */
			color: #333; /* Set text color */
			text-align: center; /* Center text within the element */
		}
		.liv {
			background-color: #139E03; /* Add a background color */
			border-color: #139E03;

		}
		.ram {
			background-color: #C4BE04;
			border-color: #C4BE04;
		}
		#myModal {
			display: none;
			position: fixed;
			top: 50%;
			left: 50%;
			width: 70%;
			transform: translate(-50%, -50%);
			padding: 20px;
			background-color: #fff;
			border: 1px solid #ccc;
			max-height: 80%; /* Set a maximum height for the modal */
			overflow-y: auto; /* Enable vertical scrollbar if content overflows */
			box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
			z-index: 1;
		}

		#overlay {
			display: none;
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: rgba(0, 0, 0, 0.5);
			z-index: 0;
		}
	</style>

	<div class="example-wrapper">
		<div class="container">

			<div class="right">
				<div class="col-md-4 ">
					<div class="form-group">
						<label for="DateDu" class="font-weight-bold">DU</label>
						<input type="date" id="DateDu" name="DateDu" class="form-control form-control-sm-2 societe-input required" value="{{ 'now'|date('Y-m-d') }}">
					</div>
				</div>
				<div class="col-md-4 ">
					<div class="form-group">
						<label for="DateAu" class="font-weight-bold">Au</label>
						<input type="date" id="DateAu" name="DateAu" class="form-control form-control-sm-2 societe-input required" value="{{ 'now'|date('Y-m-d') }}">
					</div>

				</div>
				<div class="">
					<button class="basic" id="creer" onclick="openModal()">
						<span>
							Créer
						</span>
					</button>
				</div>
			</div>
		</div>
	</div>


	<div class="page-block col-lg-12">
		<table class="table text-center datatable" id="eventTable" style="color: #0E4377;">
			<thead>
				<tr class="tr-head">
					<th>Titre</th>
					<th>Start</th>
					<th>End</th>
					<th>Localisation</th>
					<th>Type</th>
				</tr>
			</thead>
			<tbody></tbody>
		</tbody>
	</table>
</div>
<div id="myModal">
	<span onclick="closeModal()" style="cursor: pointer; float: right;">&times;</span>
	<form id="eventForm" enctype="multipart/form-data">
		<div class="form-group col-md-6">
			<div class="col-md-12 row mt-3">
				<label for="subject">Sujet:</label>
				<input type="text" id="subject" name="subject" class="form-control form-control-sm-2 societe-input required" required>
			</div>
			<div class="col-md-12 row mt-3">
				<label for="meeting-time-start">Start Date:</label>
				<input type="datetime-local" id="meeting-time-start" name="startDate" class="form-control form-control-sm-2 societe-input required" required>
			</div>
			<div class="col-md-12 row mt-3">
				<label for="meeting-time-end">End Date:</label>
				<input type="datetime-local" id="meeting-time-end" name="endDate" class="form-control form-control-sm-2 societe-input required" required>
			</div>
			<div class="col-md-12 row mt-3">
				<label for="location">Localisation:</label>
				<input type="text" id="location" name="location" class="form-control form-control-sm-2 societe-input required" required>
			</div>
		</div>
		<div class="col-md-6">

			<div class="col-md-12 row mt-3">
				<label for="file">Pièce jointe</label>
				<input type="file" id="file" name="attachment" class="form-control form-control-sm-2 societe-input required" accept=".pdf, .doc, .docx">
			</div>
			<div class="col-md-12 row mt-3">
				<label for="endDateTime">Transporteur</label>
				<select name="transports" class="form-control form-control-sm-2 societe-input" id="transports">
					{% for transport in transports %}
						<option value="{{ transport.societe }}">{{ transport.societe }}</option>
					{% endfor %}
				</select>
			</div>
			<div class="col-md-12 row mt-3">
				<label for="endDateTime">Type Transport</label>
				<select name="transports" class="form-control form-control-sm-2 societe-input" id="type">
					<option value="LIV">LIV (LIVRAISON)</option>
					<option value="RAM">RAM Ramasse</option>
					<option value="RAM TS">RAM TS (Rammasse toute sauf palettes)</option>
					<option value="RAM TY">RAM TY (rammasse Tout y compris palettes)</option>
					<option value="ROT">ROT (Rotation)</option>

				</select>

				<br>
				<br>
				<button type="button" class="form-control form-control-sm-2 societe-input required" id="submitBtn">Créer Evénements</button>

			</div>
		</div>

	</form>

</div><!-- The Overlay --><div id="overlay"></div>

<script>
	getEvent();
function openModal() {

document.getElementById("myModal").style.display = "block";
document.getElementById("overlay").style.display = "block";
}

function closeModal() {


document.getElementById("myModal").style.display = "none";
document.getElementById("overlay").style.display = "none";

}

document.getElementById('DateDu').addEventListener('change', function () {
var minDateDu = this.value;

document.getElementById('DateAu').min = minDateDu;
getEvent();

});
document.getElementById('DateAu').addEventListener('change', function () {
var minDateDu = this.value;
document.getElementById('DateDu').max = minDateDu;
getEvent();
});
function getEvent() {
let DateDu = document.getElementById('DateDu').value;
let DateAu = document.getElementById('DateAu').value;

$.ajax({
type: "GET",
url: "/event-date",
data: {
datedu: transormDate(DateDu),
dateau: transormDate(DateAu)
},
success: function (data) {
var eventTable;
if ($.fn.DataTable.isDataTable('#eventTable')) {
$('#eventTable').DataTable().destroy();
}

eventTable = $('#eventTable').DataTable({paging: true});
eventTable.clear().draw();
console.log(data)
let dt = data.value;
// Populate the table with the new data
for (var i = 0; i < dt.length; i++) {
var event = dt[i];
var startDateTime = new Date(event.start.dateTime);
var endDateTime = new Date(event.end.dateTime);

// Format the start and end hours
var options = {
weekday: 'long',
year: 'numeric',
month: 'long',
day: 'numeric',
hour: 'numeric',
minute: 'numeric',
hour12: false
};

// Format the start and end hours
var startHour = (startDateTime.getHours() + 1) + ":" + (
startDateTime.getMinutes() < 10 ? '0' : ''
) + startDateTime.getMinutes();
var endHour = (endDateTime.getHours() + 1) + ":" + (
endDateTime.getMinutes() < 10 ? '0' : ''
) + endDateTime.getMinutes();

// Add one hour
var oneHour = 60 * 60 * 1000; // 1 hour in milliseconds
startDateTime.setTime(startDateTime.getTime() + oneHour);
endDateTime.setTime(endDateTime.getTime() + oneHour);

// Format the start date with the added start hour
var formattedStartDate = startDateTime.toLocaleString('fr-FR', options).replace(/\u200E/g, '') + ' ';
var formattedEndDate = endDateTime.toLocaleString('fr-FR', options).replace(/\u200E/g, '') + ' ';
console.log(event.location);
var newRow = [
event.subject,
formattedStartDate,
formattedEndDate,
event.location.displayName,
getTypeEvent(event.subject)
];
eventTable.row.add(newRow);
}

eventTable.draw();
},
error: function (error) {
console.log(error);
}
});


}
function transormDate(dateTransorm) {
let dateObject = new Date(dateTransorm);

// Transform the date to the format YYYY-MM-DD
let transformedDate = `${
dateObject.getFullYear()
}-${
(dateObject.getMonth() + 1).toString().padStart(2, '0')
}-${
dateObject.getDate().toString().padStart(2, '0')
}`;

return transformedDate;
}
function getTypeEvent(event) {
if (event.includes("LIV")) {
return "<div class='type liv'>LIVRAISON</div>"
} else if (event.includes("RAM")) {
return "<div class='type ram'>RAMASSAGE</div>"

} else {
return "<div></div>"

}
}
function retrieveFormData() {
var d = $('#file')[0].files[0];
console.log(d);
/*var subject = document.getElementById('subject').value;
var startDate = document.getElementById('meeting-time-start').value;
var endDate = document.getElementById('meeting-time-end').value;
var location = document.getElementById('location').value;
var chantier = document.getElementById('chantier').value;
var transporteur = document.getElementById('transports').value;
var type = document.getElementById('type').value;



$.ajax({
type: "POST",
url: "/event-save",
data: {
subject: type + " - " + subject + " - " + transporteur,
startDate: startDate,
endDate: endDate,
location: location
},
success: function (data) {
if (data == 201) {
window.location.reload();
}
},
error: function (error) {
console.log(error);
}
});

*/
}
$(document).ready(function () {
$('#submitBtn').on('click', function () { // Retrieve form values using document.getElementById
var type = document.getElementById('type').value;
var subject = document.getElementById('subject').value;
var startDate = document.getElementById('meeting-time-start').value;
var endDate = document.getElementById('meeting-time-end').value;
var location = document.getElementById('location').value;
var transporteur = document.getElementById('transports').value;

// Check if a file is selected before trying to access its properties
var fileInput = $('#file')[0];
var attachmentFile = fileInput.files.length > 0 ? fileInput.files[0] : null;
console.log(fileInput);

// Create FormData object to handle file uploads
var formData = new FormData();
formData.append('subject', type + " - " + subject + " - " + transporteur);
formData.append('startDate', startDate);
formData.append('endDate', endDate);
formData.append('location', location);
formData.append('attachment', attachmentFile);

$.ajax({
type: "POST",
url: "/event-save",
data: formData,
processData: false,
contentType: false,
success: function (data) {
if (data == 201) {
window.location.reload();
}
},
error: function (error) {
console.log(error);
}
});

});
});
</script>{% endblock %}
