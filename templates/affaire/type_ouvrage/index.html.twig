{% extends 'base.html.twig' %}

{% block title %}Liste des ouvrages
{% endblock %}

{% block body %}

	<style>

		.badge {
			font-size: 1em;
			line-height: 1.5;
		}

		.nav-link {
			padding-top: 1rem !important;
			padding-bottom: 1rem !important;
			min-width: 11.25rem !important;
		}

		.nav-tabs {
			border-bottom: 8px solid #d9e2ec;
		}

		.add-button-devis {
			display: inline-flex;
			appearance: none;
			-webkit-box-align: center;
			align-items: center;
			-webkit-box-pack: center;
			justify-content: center;
			user-select: none;
			position: relative;
			white-space: nowrap;
			vertical-align: middle;
			outline: transparent solid 2px;
			outline-offset: 2px;
			line-height: 1.2;
			border-radius: 0.25rem;
			font-weight: 600;
			height: 2.25rem;
			min-width: 2.5rem;
			font-size: 1rem;
			padding-inline-start: 1rem;
			padding-inline-end: 1rem;
			background: #109cf1;
			color: #ffffff;
			width: min-content;
			font-family: Lato, sans-serif;
			border: 0;
		}

		.add-button-devis:hover {
			background: #0d8cd9;
		}

		.chakra-input {
			width: 100%;
			min-width: 0;
			outline: transparent solid 2px;
			outline-offset: 2px;
			position: relative;
			appearance: none;
			font-size: 1rem;
			padding-inline: 0;
			height: 1.8rem;
			border-radius: 0;
			border: 0;
			border-bottom-width: 1px;
			border-bottom-style: solid;
			border-color: #d9e2ec;
			background: #00000000;
			color: #486581;
			opacity: 1;

		}

		.chakra-input:focus {
			border-color: #109cf1;
		}

		.chakra-input:focus-visible {
			border-color: rgb(16, 156, 241);
			border-top-color: rgb(16, 156, 241);
			border-right-color: #109cf1;
			border-bottom-color: rgb(16, 156, 241);
			border-left-color: rgb(16, 156, 241);
			box-shadow: rgb(16 156 241) 0 1px 0 0;
		}

		.modal-footer {
			border: 0;
			justify-content: space-between;
		}

		.pointer {
			cursor: pointer;
		}

		.pointer:hover {
			background: #edf8ff;
		}

		.tpoints {
			width: 1.5rem;
			height: 1.5rem;
			display: inline-block;
			line-height: 1em;
			flex-shrink: 0;
			vertical-align: middle;
		}

		#svg-button {
			width: 1.5rem;
			height: 1.5rem;
			display: inline-block;
			line-height: 1em;
			flex-shrink: 0;
			color: currentcolor;
			vertical-align: middle;
			color: #d9e2ec;
			appearance: none;
			border: 0;
			background: unset;
		}

		#svg-button:hover {
			color: #0d8cd9;
		}

		.action-button {
			width: 1.5rem;
			height: 1.5rem;
			display: inline-block;
			line-height: 1em;
			flex-shrink: 0;
			color: currentcolor;
			vertical-align: middle;
			color: #d9e2ec;
			appearance: none;
			border: 0;
			background: unset;
		}

		.titre {
			width: 70%;
		}

		.valeur {
			width: 15%;
		}

		#loader-bibliotheque-page {
			position: fixed;
			z-index: 9999;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: rgba(0, 0, 0, 0.5);
		}

		#loader-bibliotheque-page .modal-dialog {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
		}

		.table-bordered th.titre {
			width: 150px; /* Ajustez la largeur du titre selon vos besoins */
		}

		.table-bordered td.valeur {
			max-width: 50px; /* Ajustez la largeur maximale de kg et tps selon vos besoins */
			overflow: hidden;
			text-overflow: ellipsis;
			white-space: nowrap;
		}
	</style>

	<div id="loader-bibliotheque-page" class="modal">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-body">
					<div class="spinner-border text-primary" role="status">
						<span class="sr-only">Loading...</span>
					</div>
				</div>
			</div>
		</div>
	</div>
	<nav>
		<div class="nav nav-tabs" id="nav-tab" role="tablist">
			<button class="nav-link active" id="nav-ouvrage-prix-tab" data-bs-toggle="tab" data-bs-target="#nav-ouvrage-prix" type="button" role="tab" aria-controls="nav-ouvrage-prix" aria-selected="false">
				Gestion des prix
			</button>
			<button class="nav-link" id="nav-ouvrage-type-tab" data-bs-toggle="tab" data-bs-target="#nav-ouvrage-type" type="button" role="tab" aria-controls="nav-ouvrage-type" aria-selected="false">
				Type d'ouvrage
			</button>
		</div>
	</nav>

	<div
		class="tab-content" id="nav-tabContent">
		{# nouvelle version des ouvrages #}
		<div class="tab-pane fade show active" id="nav-ouvrage-prix" role="tabpanel" aria-labelledby="nav-ouvrage-prix-tab">

			<div class="pt-5">
				<div
					class="container col-md-12">

					{# affiche un bouton pour chaque type d'ouvrage pour afficher les valeurs dépendantes #}
					{% for typeOuvrage in typeOuvrages %}
						{% if typeOuvrage.code not in ['T'] %}
							<button type="button" class="btn btn-primary type-ouvrage" data-id="{{ typeOuvrage.id }}">{{ typeOuvrage.titre }}</button>
						{% endif %}
					{% endfor %}

					{# initialise une div contenant les tableaux pour chaque type douvrage et les masque avec display:none #}
					{% for typeOuvrage in typeOuvrages %}
						<div class="row mt-5 type-ouvrage-details" id="type-ouvrage-{{ typeOuvrage.id }}">
							{% if typeOuvrage.code is same as 'A' %}
								<table class="table table-autre-ouvrage text-center" id="dataTable_AutreOuvrage">
									<thead>
										<tr class="tr-head">
											<th>Id</th>
											<th>Désignation</th>
											<th>Prix Unitaire</th>
											<th>%Marge</th>
											<th>Location</th>
											<th>Montage</th>
											<th>Démontage</th>
											<th>Transport Aller</th>
											<th>Transport Retour</th>
											<th>Manutention Appro</th>
											<th>Manutention Repli</th>
											<th>Ventes</th>
											<th>Action</th>
										</tr>
									</thead>
									<tbody>
										{% for autreOuvrage in autreOuvrages %}
											<tr class="" data-id="{{ autreOuvrage.id }}">
												<td>{{ autreOuvrage.id }}</td>
												<td>{{ autreOuvrage.designation }}</td>
												<td>
													{{ autreOuvrage.prixUnitaire|number_format(2,',',' ') }}€
																																																				                                                /{{ autreOuvrage.unite.label }}
												</td>
												<td>{{ autreOuvrage.marge|number_format(3,',',' ') }}</td>
												<td>{{ autreOuvrage.location|number_format(2,',',' ') }}€</td>
												<td>{{ autreOuvrage.montage|number_format(2,',',' ') }}€</td>
												<td>{{ autreOuvrage.demontage|number_format(2,',',' ') }}€</td>
												<td>{{ autreOuvrage.transportAller|number_format(2,',',' ') }}€</td>
												<td>{{ autreOuvrage.transportRetour|number_format(2,',',' ') }}€</td>
												<td>{{ autreOuvrage.manutentionAppro|number_format(2,',',' ') }}€</td>
												<td>{{ autreOuvrage.manutentionRepli|number_format(2,',',' ') }}€</td>
												<td>{{ autreOuvrage.vente|number_format(2,',',' ') }}€</td>
												<td>
													<a href="{{ path('app_affaire_autre_ouvrage_edit', {'id': autreOuvrage.id}) }}">
														<i class="bi bi-pencil-square"></i>
													</a>
												</td>
											</tr>
										{% endfor %}
									</tbody>
								</table>
							{% else %}
								<div class="row justify-content-around pb-2">
									<div class="col-md-12 row justify-content-end">
										<button type="button" class="col-md-6 add-button-devis edit-prix-ouvrage" id="ouvrage-attributs-{{ typeOuvrage.id }}">Modifier
										</button>
										<button style="display: none;" type="button" class="col-md-6 add-button-devis update-prix-ouvrage" id="update-ouvrage-attributs-{{ typeOuvrage.id }}">Enregistrer
										</button>
									</div>
								</div>
								<div
									class="row">
									{# pour un type d'ouvrage construit tous les tableaux qui font référence #}
									{% for table in typeOuvrage.attributOuvrages %}
										<div class="col-md-6" style="overflow-x: auto">
											<table class="table table-bordered">
												<thead style="color: #fff; border-color: #fff; --bs-table-bg: #0E4377;">
													<tr>
														<th class="titre">{{ table.titre }}</th>
														<th class="valeur">kg</th>
														<th class="valeur">TPS</th>
														<th class="valeur">order</th>

													</tr>
												</thead>
												<tbody>
													{# à partir de chaque header des tableaux affiche les lignes qui correspondent #}
													{% for tr in table.attributOuvrageTrs %}
														<tr class="attribut typeOuvrage-{{ typeOuvrage.id }}" id="attribut_{{ tr.id }}">
															<td class="editable typeOuvrage-{{ typeOuvrage.id }} attribut-titre" id="titre_{{ tr.id }}">{{ tr.titre }}</td>
															<td class="editable typeOuvrage-{{ typeOuvrage.id }} attribut-poids" id="poids_{{ tr.id }}">{{ tr.poidsKG|number_format(2,',',' ') }}</td>
															<td class="editable typeOuvrage-{{ typeOuvrage.id }} attribut-temps" id="temps_{{ tr.id }}">{{ tr.tps }}</td>
															<td class="editable typeOuvrage-{{ typeOuvrage.id }} attribut-temps" id="order_{{ tr.id }}">{{ tr.ordre }}</td>

														</tr>
													{% endfor %}
												</tbody>
											</table>
										</div>
									{% endfor %}
								</div>
							{% endif %}
						</div>
					{% endfor %}
				</div>
			</div>
		</div>

		<div class="tab-pane fade" id="nav-ouvrage-type" role="tabpanel" aria-labelledby="nav-ouvrage-type-tab">

			<table class="table datatable">
				<thead>
					<tr class="tr-head">
						<th>Id</th>
						<th>Titre</th>
						<th>Code</th>
						<th>Couleur</th>
						<th>actions</th>
					</tr>
				</thead>
				<tbody>
					{% for typeOuvrage in typeOuvrages %}
						<tr>
							<td>{{ typeOuvrage.id }}</td>
							<td>
								<div class="badge" style="background:{{ typeOuvrage.couleur }};line-height: 1em;font-size: 1em;color:{{ typeOuvrage.couleurText is not empty ? typeOuvrage.couleurText : " white" }}; ">{{ typeOuvrage.titre }}</div>
							</td>
							<td>{{ typeOuvrage.code }}</td>
							<td>{{ typeOuvrage.couleur }}</td>
							<td>
								<a href="{{ path('app_affaire_type_ouvrage_edit', {'id': typeOuvrage.id}) }}">Modifier</a>
							</td>
						</tr>
					{% else %}
						<tr>
							<td colspan="4">Aucun ouvrage trouvé</td>
						</tr>
					{% endfor %}
				</tbody>
			</table>
		</div>
	</div>

	<script>

		// Script partie ouvrage
// Permet d'obtenir les tableaux avec les valeurs correspondantes
$('.type-ouvrage').on('click', function () { // Masquer tous les détails de type d'ouvrage
$('.type-ouvrage-details').hide();
// Désélectionner tous les boutons
$('.type-ouvrage').removeClass('active');

// Afficher les détails correspondant au bouton cliqué
var id = $(this).data('id');
$('#type-ouvrage-' + id).show();
// Sélectionner le bouton cliqué
$(this).addClass('active');
})


// fonction qui permet de mettre des inputs dans les tableaux des prix
$('.edit-prix-ouvrage').click(function () {
let typeOuvrageId = $(this).attr('id').replace(/[^\d,]/g, '');
$(this).hide(); // masque le bouton modifier
$('#update-ouvrage-attributs-' + typeOuvrageId).show(); // affiche le bouton enregistrer
$('.editable.typeOuvrage-' + typeOuvrageId).each(function () { // stocke la valeur initiale de l'élément de texte dans un attribut data
$(this).data('initial-value', $(this).text());
// remplace l'élément de texte par un input avec la valeur initiale
$(this).html('<input type="text" style="width:80%" value="' + $(this).text() + '">');

})
})

// fonction qui permet de retirer les inputs (servira à enregistrer les inputs avec un POST)
$('.update-prix-ouvrage').click(function () {
let typeOuvrageId = $(this).attr('id').replace(/[^\d,]/g, '');
let attributs = [];
$('.attribut.typeOuvrage-' + typeOuvrageId).each(function () {
let id = parseInt($(this).attr('id').replace('attribut_', ''));
let attribut = {
'id': id,
'titre': $('#titre_' + id).children().val(),
'poids': parseFloat($('#poids_' + id).children().val().replace(',', '.')),
'temps': $('#temps_' + id).children().val(),
 'order':$('#order_' + id).children().val(),
};
attributs.push(attribut);
})

$("#loader-bibliotheque-page").modal("show");

let path = "{{ path('app_affaire_attribut_table_edit') }}";
$.post(path, {
attributs
}, function (response) {
let data = JSON.parse(response);

if (data.code === 200) {
$('.editable.typeOuvrage-' + typeOuvrageId).each(function () { // récupère la valeur de l'input
var value = $(this).find('input').val();
// remplace l'input par l'élément de texte avec la valeur mise à jour
$(this).html(value);
});
$('#ouvrage-attributs-' + typeOuvrageId).show(); // affiche le bouton modifier
$('#update-ouvrage-attributs-' + typeOuvrageId).hide(); // masque le bouton enregistrer
$("#loader-bibliotheque-page").modal("hide");
}
})
})

// supprimer les char non numerique
$('body').on('keyup', '.numbers', function () {
this.value = this.value.replace(/[^0-9\.\,-]/g, '');
});

$(document).ready(function () { // Cacher toutes les div "type-ouvrage-details" sauf la première
$('.type-ouvrage-details:not(:first)').hide();

// Gérer le clic sur les boutons pour afficher la div correspondante
$('.type-ouvrage').on('click', function () {
const typeId = $(this).data('id');
$('.type-ouvrage-details').hide();
$ (`#type-ouvrage-${typeId}`).show();
})
})

$(document).ready(function () {
$('#dataTable_AutreOuvrage').DataTable({
"lengthMenu": [
10, 25, 50
], // Options de nombre d'entrées par page
"pageLength": 25, // Nombre d'entrées par page par défaut
"language": {
"searchPlaceholder": "Rechercher" // Personnaliser le texte de la barre de recherche
}
});
})
	</script>

{% endblock %}
