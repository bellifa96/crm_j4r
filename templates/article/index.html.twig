{% extends 'base.html.twig' %}

{% block title %}
	Articles
{% endblock %}

{% block body %}
	<style>
		.container {
			display: flex;
			align-items: center;
			justify-content: space-between;
			width: 100%; /* Set your desired width */
			padding: 10px;
		}

		.left {
			flex: 1; /* Takes up available space on the left */

		}

		.right {
			flex: 2; /* Takes up available space on the right */
			margin-left: 20px; /* Add margin for spacing between left and right */
		}

		select {
			width: 20%;
			padding: 5px;
		}
		.title_article {
			font-family: 'Poppins', sans-serif;
			color: black;
			font-size: 30px;
			margin-left: 10%;
		}
		.basic {
			width: 200px;
			height: 35px;
			background: #f5f5f5;
			font-family: 'Poppins', sans-serif;
			margin-left: 5%;

		}
	</style>

	<div class="example-wrapper">
		<div class="container">
			<div class="left">
				<h2 class="title_article">Articles</h2>
			</div>
			<div class="right">
				<select class="basic" id="agenceSelect">
					<option>Agence</option>
					{% for agence in agences %}
						<option value="{{ agence.idagence }}">
							{{ agence.nomagence }}
						</option>
					{% endfor %}
				</select>
				<select class="basic" id="depotSelect">
					<option>Depot</option>

				</select>

				<button class="basic" onclick="handleFile()">
					<input type="file" id="fileInput" accept=".xlsx, .xls">
				</button>

			</div>
		</div>
	</div>

	<div class="page-block col-lg-12">
		<table class="table text-center datatable" id="articleTable" style="color: #0E4377;">
			<thead>
				<tr class="tr-head">
					<th>Id</th>
					<th>Désignation</th>
					<th>Prix location</th>
					<th>Prix Vente</th>
					<th>Poids</th>
					<th>Qte Totale</th>
					<th>Qte Dispo</th>
					<th>Qte Sortie</th>
					<th>Qte Réservée</th>
					<th>Qte Transit</th>
					<th>Action</th>

				</tr>
			</thead>
			<tbody>

				{% for article in articles %}
					<tr>
						<td>{{ article.article }}</td>
						<td>{{ article.designation }}</td>
						<td>{{ article.poids }}</td>
						<td>{{ article.qtetotale }}</td>
						<td>{{ article.qtedispo }}</td>
						<td>{{ article.qtesortie }}</td>
						<td>{{ article.qtereserve }}</td>
						<td>{{ article.qtetransit }}</td>
						<td>
							<a href="{{ path('app_article_edit', {'id': article.idarticles }) }}" class="btn btn-warning">
								<i class="bi bi-pencil-fill"></i>
								Edit
							</a>
						</td>
					</tr>
				{% endfor %}

			</tbody>
		</tbody>
	</table>
</div>
<script>
	function redirect_to_page_edit_article(idarticle) {
window.location.href = '/edit-article/' + idarticle;
}
// cette méthode pour le changement des données sur le tableau.
// Variable to store the DataTable instance
// Variable to store the DataTable instance
var articleTable;

// Function to handle depot selection
function handleDepotSelection() {
var selectedDepot = document.getElementById("depotSelect").value;

if ($.fn.DataTable.isDataTable('#articleTable')) {
$('#articleTable').DataTable().destroy();
}

articleTable = $('#articleTable').DataTable({paging: true});

$.ajax({
type: 'GET',
url: '/get-article',
data: {
selectedDepot: selectedDepot
},
success: function (data) {
articleTable.clear().draw();

// Populate the table with the new data
for (var i = 0; i < data.length; i++) {
var article = data[i];
var newRow = [
article.article,
article.designation,
article.prixloc,
article.prixvente,
article.poids,
article.qtetotale,
article.qtedispo,
article.qtesortie,
article.qtereserve,
article.qtetransit,
'<button class="btn btn-warning" onclick="redirect_to_page_edit_article(' + article.idarticles + ')"><i class="bi bi-pencil-fill"></i>Edit</button>'
];
articleTable.row.add(newRow);
}

articleTable.draw();
},
error: function (error) {
console.error('Error:', error);
}
});
}

function handleAgenceSelection() {
var selectedAgence = document.getElementById("agenceSelect").value;
$.ajax({
type: 'GET',
url: '/get-depot',
data: {
selectedAgence: selectedAgence
},
success: function (data) {
var select = $('#depotSelect');
select.empty();
// Clear existing options

// Add a default option
select.append('<option>Depot</option>');

// Iterate over the data and append options to the select
$.each(data, function (index, depot) {
select.append('<option value="' + depot.iddepot + '">' + depot.nomdepot + '</option>');
});
},
error: function (error) {
console.error('Error:', error);
}
});


}

$(document).ready(function () {
$('#depotSelect').on('change', function () { // Call the function to handle depot selection
handleDepotSelection();
});
$('#agenceSelect').on('change', function () { // Call the function to handle depot selection
handleAgenceSelection();
});
});
</script>{% endblock %}
