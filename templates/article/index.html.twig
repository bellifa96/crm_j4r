{% extends 'base.html.twig' %}

{% block title %}
	Articles
{% endblock %}

{% block body %}
	<style>
		.container {
			display: flex;
			align-items: center;
			justify-content: space-between;
			width: 100%; /* Set your desired width */
			padding: 10px;
		}

		.left {
			flex: 1; /* Takes up available space on the left */

		}

		.right {
			flex: 2; /* Takes up available space on the right */
			margin-left: 20px; /* Add margin for spacing between left and right */
		}

		select {
			width: 20%;
			padding: 5px;
		}
		.title_article {
			font-family: 'Poppins', sans-serif;
			color: black;
			font-size: 30px;
			margin-left: 10%;
		}
		.basic {
			width: 200px;
			height: 35px;
			background: #f5f5f5;
			font-family: 'Poppins', sans-serif;
			margin-left: 5%;

		}
	</style>

	<div class="example-wrapper">
		<div class="container">
			<div class="left">
				<h2 class="title_article">Articles</h2>
			</div>
			<div class="right">
				<select class="basic" id="depotSelect">
					<option>Depot</option>
					{% for depot in depots %}

						<option value="{{ depot.iddepot }}">{{ depot.nomdepot }}</option>

					{% endfor %}
				</select>
				<button class="basic">
					Nouveau
				</button>
				<button class="basic" onclick="handleFile()">
					<input type="file" id="fileInput" accept=".xlsx, .xls">
				</button>

			</div>
		</div>
	</div>

	<div class="page-block col-lg-12">
		<table class="table text-center datatable" id="articleTable" style="color: #0E4377;">
			<thead>
				<tr class="tr-head">
					<th>Id</th>
					<th>Désignation</th>
					<th>Poids</th>
					<th>Qte Totale</th>
					<th>Qte Dispo</th>
					<th>Qte Sortie</th>
					<th>Qte Réservée</th>
					<th>Qte Transit</th>
				</tr>
			</thead>
			<tbody>

				{% for article in articles %}
					<tr>
						<td>{{ article.article }}</td>
						<td>{{ article.designation }}</td>
						<td>{{ article.poids }}</td>
						<td></td>
						<td></td>
						<td></td>
						<td></td>
						<td></td>
					</tr>
				{% endfor %}

			</tbody>
		</tbody>
	</table>
</div>
<script>
  // cette méthode pour le changement des données sur le tableau.
 // Variable to store the DataTable instance
// Variable to store the DataTable instance
var articleTable;

// Function to handle depot selection
function handleDepotSelection() {
    var selectedDepot = document.getElementById("depotSelect").value;

    if ($.fn.DataTable.isDataTable('#articleTable')) {
        $('#articleTable').DataTable().destroy();
    }

    articleTable = $('#articleTable').DataTable({
        paging: true,
    });

    $.ajax({
        type: 'GET',
        url: '/get-article',
        data: { selectedDepot: selectedDepot },
        success: function (data) {
            articleTable.clear().draw();

            // Populate the table with the new data
            for (var i = 0; i < data.length; i++) {
                var article = data[i];
                var newRow = [
                    article.article,
                    article.designation,
                    article.poids,
                    article.qtetotale,
                    article.qtedispo,
                    article.qtesortie,
                    article.qtereserve,
                    article.qtetransit
                ];
                articleTable.row.add(newRow);
            }

            articleTable.draw();
        },
        error: function (error) {
            console.error('Error:', error);
        }
    });
}

$(document).ready(function () {
    $('#depotSelect').on('change', function () {
        // Call the function to handle depot selection
        handleDepotSelection();
    });
});


</script>

{% endblock %}


